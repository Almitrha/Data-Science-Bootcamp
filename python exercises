###############################################
# Python Alıştırmalar
###############################################

###############################################
# GÖREV 1: Veri yapılarının tipleriniz inceleyiniz.
###############################################

x = 8


y = 3.2


z = 8j + 18


a = "Hello World"


b = True


c = 23 < 22



l = [1, 2, 3, 4,"String",3.2, False]



d = {"Name": "Jake",
     "Age": [27,56],
     "Adress": "Downtown"}


t = ("Machine Learning", "Data Science")



s = {"Python", "Machine Learning", "Data Science","Python"}

data_type = [8, 3.2, 8j + 18, "Hello World", True, 23 < 22, [1, 2, 3, 4,"String",3.2, False],
                 {"Name": "Jake", "Age": [27,56], "Adress": "Downtown"},
                 ("Machine Learning", "Data Science"),
                 {"Python", "Machine Learning", "Data Science","Python"}]

for data in data_type:
    print(type(data))



###############################################
# GÖREV 2: Verilen string ifadenin tüm harflerini büyük harfe çeviriniz. Virgül ve nokta yerine space koyunuz, kelime kelime ayırınız.
###############################################

text = "The goal is to turn data into information, and information into insight."

text = text.upper().replace(",", " ").replace(".", " ")
word_list = text.split()

print(word_list)

###############################################
# GÖREV 3: Verilen liste için aşağıdaki görevleri yapınız.
###############################################

lst = ["D","A","T","A","S","C","I","E","N","C","E"]

# Adım 1: Verilen listenin eleman sayısına bakın.

print(len(lst))

# Adım 2: Sıfırıncı ve onuncu index'teki elemanları çağırın.

print(lst[0], lst[9])

# Adım 3: Verilen liste üzerinden ["D","A","T","A"] listesi oluşturun.

lst2 = lst[:4]
print(lst2)

# Adım 4: Sekizinci index'teki elemanı silin.

del lst[7]
print(lst)

# Adım 5: Yeni bir eleman ekleyin.

lst.append("M")
print(lst)

# Adım 6: Sekizinci index'e  "N" elemanını tekrar ekleyin.

lst.insert(7, "N")
print(lst)

###############################################
# GÖREV 4: Verilen sözlük yapısına aşağıdaki adımları uygulayınız.
###############################################

dict = {'Christian': ["America",18],
        'Daisy':["England",12],
        'Antonio':["Spain",22],
        'Dante':["Italy",25]}


# Adım 1: Key değerlerine erişiniz.

dict.keys()

# Adım 2: Value'lara erişiniz.

dict.values()

# Adım 3: Daisy key'ine ait 12 değerini 13 olarak güncelleyiniz.

dict['Daisy'][1]=13

# Adım 4: Key değeri Ahmet value değeri [Turkey,24] olan yeni bir değer ekleyiniz.

dict['Ahmet']=['Turkey',24]

# Adım 5: Antonio'yu dictionary'den siliniz.

del dict['Antonio']



###############################################
# GÖREV 5: Arguman olarak bir liste alan, listenin içerisindeki tek ve çift sayıları ayrı listelere atıyan ve bu listeleri return eden fonskiyon yazınız.
###############################################

l = [2,13,18,93,22]


def seperate_even_odd(lst):

    even_numbers=[]
    odd_numbers=[]
    for number in lst:
        if number %2 == 0:
            even_numbers.append(number)
        else:
            odd_numbers.append(number)

    return even_numbers,odd_numbers

seperate_even_odd(l)

###############################################
# GÖREV 6: Aşağıda verilen listede mühendislik ve tıp fakülterinde dereceye giren öğrencilerin isimleri bulunmaktadır.
# Sırasıyla ilk üç öğrenci mühendislik fakültesinin başarı sırasını temsil ederken son üç öğrenci de tıp fakültesi öğrenci sırasına aittir.
# Enumarate kullanarak öğrenci derecelerini fakülte özelinde yazdırınız.
###############################################

ogrenciler = ["Ali","Veli","Ayşe","Talat","Zeynep","Ece"]

for i, ogrenci in enumerate(ogrenciler[:3]):
    print(f"Engineering: {i + 1}. {ogrenci}")

for i, ogrenci in enumerate(ogrenciler[3:]):
    print(f"Medicine: {i + 1}. {ogrenci}")




###############################################
# GÖREV 7: Aşağıda 3 adet liste verilmiştir. Listelerde sırası ile bir dersin kodu, kredisi ve kontenjan bilgileri yer almaktadır. Zip kullanarak ders bilgilerini bastırınız.
###############################################

ders_kodu = ["CMP1005","PSY1001","HUK1005","SEN2204"]
kredi = [3,4,2,4]
kontenjan = [30,75,150,25]

for code, credit, limit in zip(ders_kodu, kredi, kontenjan):
    print(f"Code: {code}, Credit: {credit}, Limit: {limit}")

###############################################
# GÖREV 8: Aşağıda 2 adet set verilmiştir.
# Sizden istenilen eğer 1. küme 2. kümeyi kapsiyor ise ortak elemanlarını eğer kapsamıyor ise 2. kümenin 1. kümeden farkını yazdıracak fonksiyonu tanımlamanız beklenmektedir.
###############################################

kume1 = set(["data", "python"])
kume2 = set(["data", "function", "qcut", "lambda", "python", "miuul"])

def kume_analiz(kume1, kume2):
    ortak_elemanlar = kume1 & kume2
    if ortak_elemanlar:
        return "Ortak Elemanlar: ", ortak_elemanlar
    else:
        return "2. Küme 1. Kümeden Farklı Elemanlar: ", kume2 - kume1


kume_analiz(kume1,kume2)

